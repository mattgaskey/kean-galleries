{#
/**
 * @file
 * Theme override to display a pager.
 *
 * Available variables:
 * - heading_id: Pagination heading ID. (NOTE: not using anymore; `aria-label` on the `nav` suffices)
 * - items: List of pager items.
 *   The list is keyed by the following elements:
 *   - first: Item for the first page; not present on the first page of results.
 *   - previous: Item for the previous page; not present on the first page
 *     of results.
 *   - next: Item for the next page; not present on the last page of results.
 *   - last: Item for the last page; not present on the last page of results.
 *   - pages: List of pages, keyed by page number.
 *   Sub-sub elements:
 *   items.first, items.previous, items.next, items.last, and each item inside
 *   items.pages contain the following elements:
 *   - href: URL with appropriate query parameters for the item.
 *   - attributes: A keyed list of HTML attributes for the item.
 *   - text: The visible text used for the item link, such as "‹ Previous"
 *     or "Next ›".
 * - current: The page number of the current page.
 * - ellipses: If there are more pages than the quantity allows, then an
 *   ellipsis before or after the listed pages may be present.
 *   - previous: Present if the currently visible list of pages does not start
 *     at the first page.
 *   - next: Present if the visible list of pages ends before the last page.
 *
 * @see template_preprocess_pager()
 */
#}
{% if items %}
<div class="container flex justify-center">
  <nav class="pager" aria-label="Pagination">
    <ol class="flex flex-wrap pager__items js-pager__items {{ centered ? 'max-w-max mx-auto' }}">
      {# Print previous item if we are not on the first page. #}
      {% if items.previous %}
        <li class="pager__item pager__item--previous">
          <a href="{{ items.previous.href }}" title="Go to previous page" rel="prev"{# {{ items.previous.attributes|without('href', 'title', 'rel') }} #}>
            <span class="visually-hidden">Previous page</span>
            {% set previous_text_parts = items.previous.text|default('Previous')|split(' ') %}
            {% for text_part in previous_text_parts %}
              {# we're using pseudo-element in CSS for the arrow, so tweaking this logic #}
              {# <span class="{{ loop.first and not loop.last ? 'pager__arrow' }}" aria-hidden="true">{{ text_part }}</span> #}
              <span aria-hidden="true">{{ text_part }}</span>
            {% endfor %}
          </a>
        </li>
      {% endif %}
      {# Print first item if we are not on the first page. #}
      {% if items.first %}
        <li class="pager__item pager__item--first">
          <a href="{{ items.first.href }}" title="Go to first page"{# {{ items.first.attributes|without('href', 'title') }} #}>
            <span class="visually-hidden">First page</span>
            <span aria-hidden="true">{{ items.first.text|default('First') }}</span>
          </a>
        </li>
      {% endif %}
      {# Add an ellipsis if there are further previous pages. #}
      {% if ellipses.previous %}
        <li class="pager__item pager__item--ellipsis" role="presentation">&hellip;</li>
      {% endif %}
      {# Now generate the actual pager piece. #}
      {% for key, item in items.pages %}
        {% if item %}
          <li class="pager__item{{ current == key ? ' is-active' : '' }}">
            {% if current == key %}
              {% set title = 'Current page' %}
            {% else %}
              {% set title = 'Go to page ' ~ key %}
            {% endif %}
            <a href="{{ item.href }}" title="{{ title }}" {% if current == key %}aria-current="page"{% endif %} {# {{ item.attributes|without('href', 'title') }} #}>
              <span class="visually-hidden">
                {{ current == key ? 'Current page' : 'Page' }}
              </span>
              <span>{{- key -}}</span>
            </a>
          </li>
        {% endif %}
      {% endfor %}
      {# Add an ellipsis if there are further next pages. #}
      {% if ellipses.next %}
        <li class="pager__item pager__item--ellipsis" role="presentation">&hellip;</li>
      {% endif %}
      {# Print last item if we are not on the last page. #}
      {% if items.last %}
        <li class="pager__item pager__item--last">
          <a href="{{ items.last.href }}" title="'Go to last page'" {# {{ items.last.attributes|without('href', 'title') }} #}>
            <span class="visually-hidden">Last page</span>
            <span aria-hidden="true">{{ items.last.text|default('Last') }}</span>
          </a>
        </li>
      {% endif %}
      {# Print next item if we are not on the last page. #}
      {% if items.next %}
        <li class="pager__item pager__item--next">
          <a href="{{ items.next.href }}" title="Go to next page" rel="next"{# {{ items.next.attributes|without('href', 'title', 'rel') }} #}>
            <span class="visually-hidden">'Next page'</span>
            {% set next_text_parts = items.next.text|default('Next')|split(' ') %}
            {% for text_part in next_text_parts %}
              {# we're using pseudo-element in CSS for the arrow, so tweaking this logic #}
              {# <span class="{{ loop.last and not loop.first ? 'pager__arrow' }}" aria-hidden="true">{{ text_part }}</span> #}
              <span aria-hidden="true">{{ text_part }}</span>
            {% endfor %}
          </a>
        </li>
      {% endif %}
    </ol>
  </nav>
</div>
{% endif %}
